apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    buildToolsVersion = versions.buildTools
    compileSdkVersion versions.compileSdk
    ndkVersion versions.ndkVersion

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 10005
        versionName '1.0.5'
        setProperty("archivesBaseName", "godotopenxr.${versionName}")

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }

        ndk {
            abiFilters "arm64-v8a"
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        prefabPublishing true
    }

    prefab {
        godot_openxr {
            headers "../src"
        }
    }
}

dependencies {
    if (rootProject.findProject(":godot:lib") != null) {
        // Used for development and debugging
        compileOnly(project(":godot:lib"))
    } else {
        compileOnly(fileTree(dir: "libs", include: ["godot-lib*.aar"]))
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlinVersion}"
}

// When using the aar binary only, the *.gdns and *gdnlib files need to be in the same location
// relative to the `assets` directory, so we recreate the relative directories and copy them prior
// to building the aar binary.
final relativeAddonsConfigDir = "addons/godot-openxr/config/"
final sourceDir = "../demo/$relativeAddonsConfigDir"
final targetDir = "src/main/assets/$relativeAddonsConfigDir"

task copyAddonsConfig(type: Copy) {
    doFirst {
        delete(targetDir)
    }
    from sourceDir
    into targetDir
}

preBuild.dependsOn(copyAddonsConfig)
